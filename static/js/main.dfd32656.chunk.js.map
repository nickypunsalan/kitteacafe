{"version":3,"sources":["api/index.js","molecules/Popup.js","constants/index.js","organisms/OurVisits.js","validators/BookVisitFormValidator.js","organisms/BookVisit.js","pages/KitteaCafe.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","apis","getAllVisits","get","getVisitsByStatus","visitStatus","currentDate","createVisit","visitPayload","post","updateVisitStatus","payload","put","getVisitTypes","getVisitTypesByCode","visitTypeCode","Popup","Modal","show","this","props","onHide","backdrop","keyboard","centered","Header","closeButton","Title","popupTitle","Body","popupDesc","map","desc","Footer","Button","variant","onClick","isConfirmationPopup","className","onConfirm","Component","VisitStatus","SuccessTitle","SuccessDescription","ErrorTitle","ErrorDescription","WarningTitle","WarningDescription","OurVisits","handleCancelVisit","visitId","a","warnings","push","setState","setConfirmationPopupShown","cancelVisit","setOnConfirmationHide","successes","VisitId","state","Status","then","res","setCancelSucccessPopupShown","visits","data","isloading","isLoading","handleAttendVisit","setAttendedPopupShown","attendVisit","setOnAttendHide","setAttendSuccessPopupShown","dateToday","handleVisitStatusSelect","componentDidMount","moment","startOf","visitTypes","columns","confirmationPopupShown","cancelSucccessPopupShown","attendedPopupShown","attendSuccessPopupShown","isConfirmed","bind","populateTableData","setOnCancelSuccessHide","showModal","date","isSameOrBefore","visit","index","VisitDateTime","format","visitType","forEach","vt","VisitTypeId","_id","Name","ContactNumber","FirstName","LastName","NumberOfVisitors","alt","isVisitToday","console","log","Row","InputGroup","DropdownButton","title","id","onSelect","Dropdown","Item","eventKey","FormControl","value","Col","xs","Table","striped","condensed","hover","responsive","populateTableHeader","length","setOnAttendSuccessHide","ValidateMobileNumber","mobileNumber","cleansedMobileNumber","replace","startsWith","ValidateEmail","email","test","String","toLowerCase","theme","createTheme","palette","primary","main","contrastText","BookVisit","handleVisitTypeSelect","visitTypeValue","Code","visitTypeId","handleSubmit","event","numVisitors","visitDate","visitTime","firstName","lastName","mobileNo","preventDefault","stopPropagation","setIsValidated","dateTime","validMobileNumber","Validator","validEmail","errors","setMobileIsValid","mobileInvalidMsg","isMobileInvalid","isMobileValid","isValidated","setEmailIsValid","emailInvalidMsg","isEmailInvalid","isEmailValid","setIsShown","Email","IsDeleted","IsEditable","setClearForm","catch","err","response","status","isShown","handleNumVisitorsSelect","handleVisitDateSelect","handleVisitTimeSelect","handleFirstNameChange","handleLastNameChange","handleMobileNoChange","handleEmailChange","setOnHide","numVisitorsValue","visitDateValue","toString","visitTimeValue","firstNameValue","target","lastNameValue","mobileNoValue","emailValue","lg","Form","noValidate","validated","onSubmit","populateVisitTypes","Control","required","name","Feedback","type","utils","MomentFnsUtils","ThemeProvider","DatePicker","label","onChange","disablePast","autoOk","FloatingLabel","controlId","placeholder","maxLength","isValid","isInvalid","KitteaCafe","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src","crossorigin","document","getElementById"],"mappings":"gTAEMA,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,8BA8BEC,EATF,CACTC,aAjBwB,kBAAML,EAAIM,IAAJ,YAkB9BC,kBAjB6B,SAACC,EAAaC,GAAd,OAA8BT,EAAIM,IAAJ,kBAAmBE,EAAnB,YAAkCC,KAkB7FC,YAfuB,SAAAC,GAAY,OAAIX,EAAIY,KAAJ,UAAoBD,IAgB3DE,kBAb6B,SAACC,GAAD,OAAad,EAAIe,IAAJ,2BAAoCD,IAc9EE,cAVyB,kBAAMhB,EAAIM,IAAJ,gBAW/BW,oBAT+B,SAAAC,GAAa,OAAIlB,EAAIM,IAAJ,sBAAuBY,M,0CCY5DC,E,4JA5BX,WAEI,OACI,mCACE,eAACC,EAAA,EAAD,CACEC,KAAMC,KAAKC,MAAMF,KACjBG,OAAQF,KAAKC,MAAMC,OACnBC,SAAS,SACTC,UAAU,EACVC,UAAQ,EALV,UAOE,cAACP,EAAA,EAAMQ,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACT,EAAA,EAAMU,MAAP,UAAcR,KAAKC,MAAMQ,eAE3B,cAACX,EAAA,EAAMY,KAAP,UACGV,KAAKC,MAAMU,UAAYX,KAAKC,MAAMU,UAAUC,KAAI,SAAAC,GAAI,OAAI,4BAAIA,OAAa,SAG5E,eAACf,EAAA,EAAMgB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjB,KAAKC,MAAMC,OAAhD,mBACCF,KAAKC,MAAMiB,qBAAwB,cAACH,EAAA,EAAD,CAAQI,UAAU,WAAWF,QAASjB,KAAKC,MAAMmB,UAAjD,4B,GAtBlCC,aCHdC,EACa,SADbA,EAEgB,YAFhBA,EAGe,WAHfA,EAIU,MAJVA,EAKY,QAGZC,EACe,iBADfA,EAEiB,mBAFjBA,EAGiB,kBAGjBC,EACc,2CADdA,EAEgB,oDAFhBA,EAGgB,2DAUhBC,EACc,wBAMdC,EACa,sDAGbC,EACiB,qBADjBA,EAEiB,sBAGjBC,EACgB,sEADhBA,EAEgB,gFC2RPC,E,kDAhUX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IAiEV6B,kBAlEmB,uCAkEC,WAAOC,GAAP,eAAAC,EAAA,uDACZC,EAAW,IACNC,KAAKN,GACd,EAAKO,SAAS,CAAEJ,QAASA,EAAStB,WAAYkB,EAAgChB,UAAWsB,IAEzF,EAAKG,4BALW,2CAlED,wDA2EnBC,YA3EmB,sBA2EL,8BAAAL,EAAA,6DAEV,EAAKM,uBAAsB,IAEvBC,EAAY,IACNL,KAAKV,GAEf,EAAKW,SAAS,CAAE1B,WAAYc,EAAgCZ,UAAW4B,IAEjE/C,EAAU,CACZgD,QAAS,EAAKC,MAAMV,QACpBW,OAAQpB,GAXF,SAcJ5C,EAAIa,kBAAkBC,GAASmD,MAAK,SAAAC,GACtC,EAAKC,iCAfC,UAkBN,EAAKJ,MAAMvD,cAAgBoC,EAlBrB,kCAmBA5C,EAAIK,eAAe4D,MAAK,SAAAG,GAC1B,EAAKX,SAAS,CACVjD,YAAaoC,EACbwB,OAAQA,EAAOC,KACfC,WAAW,OAvBb,iDA4BAtE,EAAIO,kBAAkB,EAAKwD,MAAMvD,aAAayD,MAAK,SAAAG,GACrD,EAAKX,SAAS,CACVW,OAAQA,EAAOC,KACfE,WAAW,OA/Bb,4CA3EK,EAgHnBC,kBAhHmB,uCAgHC,WAAOnB,GAAP,eAAAC,EAAA,uDAEZC,EAAW,IACNC,KAAKN,GAEd,EAAKO,SAAS,CAAEJ,QAASA,EAAStB,WAAYkB,EAAgChB,UAAWsB,IAEzF,EAAKkB,wBAPW,2CAhHD,wDA0HnBC,YA1HmB,sBA0HL,8BAAApB,EAAA,6DAEV,EAAKqB,iBAAgB,IAEjBd,EAAY,IACNL,KAAKV,GAEf,EAAKW,SAAS,CAAE1B,WAAYc,EAAgCZ,UAAW4B,IAEjE/C,EAAU,CACZgD,QAAS,EAAKC,MAAMV,QACpBW,OAAQpB,GAXF,SAcJ5C,EAAIa,kBAAkBC,GAASmD,MAAK,SAAAC,GACtC,EAAKU,gCAfC,UAkBN,EAAKb,MAAMvD,cAAgBoC,EAlBrB,kCAmBA5C,EAAIK,eAAe4D,MAAK,SAAAG,GAC1B,EAAKX,SAAS,CACVjD,YAAaoC,EACbwB,OAAQA,EAAOC,KACfC,WAAW,OAvBb,iDA4BAtE,EAAIO,kBAAkB,EAAKwD,MAAMvD,YAAa,EAAKuD,MAAMc,WAAWZ,MAAK,SAAAG,GAC3E,EAAKX,SAAS,CACVW,OAAQA,EAAOC,KACfE,WAAW,OA/Bb,4CA1HK,EA+JnBO,wBA/JmB,uCA+JO,WAAOtE,GAAP,SAAA8C,EAAA,yDACtB,EAAKG,SAAS,CAAEjD,YAAaA,IAEzBA,IAAgBoC,EAHE,gCAIZ5C,EAAIK,eAAe4D,MAAK,SAAAG,GAC1B,EAAKX,SAAS,CACVjD,YAAaoC,EACbwB,OAAQA,EAAOC,KACfC,WAAW,OARD,6CAaZtE,EAAIO,kBAAkBC,EAAa,EAAKuD,MAAMc,WAAWZ,MAAK,SAAAG,GAChE,EAAKX,SAAS,CACVjD,YAAaA,EACb4D,OAAQA,EAAOC,KACfE,WAAW,OAjBD,2CA/JP,wDAsLnBQ,kBAtLmB,sBAsLC,4BAAAzB,EAAA,6DACZuB,EAAYG,MAASC,QAAQ,OACjC,EAAKxB,SAAS,CAAEc,WAAW,EAAOM,UAAWA,IAF7B,SAIV7E,EAAIO,kBAAkB,QAASsE,GAAWZ,MAAK,SAAAG,GACjD,EAAKX,SAAS,CACVW,OAAQA,EAAOC,KACfE,WAAW,OAPH,uBAWVvE,EAAIgB,gBAAgBiD,MAAK,SAAAiB,GAC3B,EAAKzB,SAAS,CACVyB,WAAYA,EAAWb,UAbf,2CApLhB,EAAKN,MAAQ,CACTK,OAAQ,GACRe,QAAS,GACTD,WAAY,GACZ7B,QAAS,GACTkB,WAAW,EACX/D,YAAaoC,EACbiC,UAAW,GACXO,wBAAwB,EACxBC,0BAA0B,EAC1BC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAa,EACbzD,WAAY,GACZE,UAAW,IAGf,EAAKmB,kBAAoB,EAAKA,kBAAkBqC,KAAvB,gBACzB,EAAKjB,kBAAoB,EAAKA,kBAAkBiB,KAAvB,gBACzB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKX,wBAA0B,EAAKA,wBAAwBW,KAA7B,gBAE/B,EAAK/B,0BAA4B,EAAKA,0BAA0B+B,KAA/B,gBACjC,EAAKtB,4BAA8B,EAAKA,4BAA4BsB,KAAjC,gBACnC,EAAK7B,sBAAwB,EAAKA,sBAAsB6B,KAA3B,gBAC7B,EAAKE,uBAAyB,EAAKA,uBAAuBF,KAA5B,gBAE9B,EAAKhB,sBAAwB,EAAKA,sBAAsBgB,KAA3B,gBAC7B,EAAKb,2BAA6B,EAAKA,2BAA2Ba,KAAhC,gBA9BnB,E,yDAkCnB,SAAsBG,GAClBtE,KAAKmC,SAAS,CAAE2B,uBAAwBQ,M,oCAG5C,SAAuBA,GACnBtE,KAAKmC,SAAS,CAAE4B,yBAA0BO,M,6BAG9C,SAAgBA,GACZtE,KAAKmC,SAAS,CAAE6B,mBAAoBM,M,oCAGxC,SAAuBA,GACnBtE,KAAKmC,SAAS,CAAE8B,wBAAyBK,M,uCAG7C,WACItE,KAAKmC,SAAS,CAAE2B,wBAAwB,M,yCAG5C,WACI9D,KAAKmC,SAAS,CAAE4B,0BAA0B,M,mCAG9C,WACI/D,KAAKmC,SAAS,CAAE6B,oBAAoB,M,wCAGxC,WACIhE,KAAKmC,SAAS,CAAE8B,yBAAyB,M,0BAyI7C,SAAalC,EAASwC,GAAO,IAAD,OAExB,OADoBb,IAAOa,GAAMZ,QAAQ,OAAOa,eAAed,MAASC,QAAQ,QACxD,mBAAGxC,UAAU,uBAAuBF,QAAS,kBAAM,EAAKiC,kBAAkBnB,MAAkB,K,+BAGxH,SAAkB0C,EAAOC,GAAQ,IAAD,OACtBH,EAAOb,IAAOe,EAAME,eAAeC,OAAO,uBAC5CC,EAAY,GAQhB,OANA7E,KAAKyC,MAAMmB,WAAWkB,SAAQ,SAAAC,GACtBN,EAAMO,cAAgBD,EAAGE,MACzBJ,EAAYE,EAAGG,SAKnB,+BACI,6BAAKT,EAAMU,gBACX,6BAAKV,EAAM/B,SACX,6BAAK+B,EAAMW,YACX,6BAAKX,EAAMY,WACX,6BAAKR,IACL,6BAAKN,IACL,6BAAKE,EAAMa,mBACNb,EAAM/B,SAAWpB,EACb,+BACG,mBAAGH,UAAU,gBAAgBoE,IAAI,SAAStE,QAAS,kBAAM,EAAKa,kBAAkB2C,EAAMQ,QACrFjF,KAAKwF,aAAaf,EAAMQ,IAAKV,MAE/B,qCAbNG,K,iCAmBjB,SAAoBb,GAChB,OACI,6BAAKA,EAAQvD,W,oBAIrB,WAAU,IAAD,iBACGwC,EAAW9C,KAAKyC,MAAhBK,OACR2C,QAAQC,IAAI,iCAAkC5C,GAa9C,OACI,gCACI,sBAAK3B,UAAU,WAAf,UACI,0DACA,0CAAY,UAAAnB,KAAKyC,aAAL,eAAYK,QAAS,YAAc,cAC/C,+CAAiB,UAAA9C,KAAKyC,aAAL,eAAYvD,aAAcc,KAAKyC,MAAMvD,YAAc,cACpE,8CAAgB,UAAAc,KAAKyC,aAAL,eAAYmB,YAAa,YAAc,cACvD,6CAAe,UAAA5D,KAAKyC,aAAL,eAAYc,WAAY,YAAc,cACrD,2CAAa,UAAAvD,KAAKyC,aAAL,eAAYV,SAAU/B,KAAKyC,MAAMV,QAAU,iBAG5D,sBAAKZ,UAAU,wBAAf,UACI,cAACwE,EAAA,EAAD,UACI,sBAAMxE,UAAU,gBAAhB,0BAKJ,cAACwE,EAAA,EAAD,CAAKxE,UAAU,OAAf,SACI,eAACyE,EAAA,EAAD,CAAYzE,UAAU,OAAtB,UACI,eAAC0E,EAAA,EAAD,CACI7E,QAAQ,oBACR8E,MAAM,eACNC,GAAG,sBACHC,SAAUhG,KAAKwD,wBAJnB,UAMI,cAACyC,EAAA,EAASC,KAAV,CAAeC,SAAU7E,EAAzB,iBACA,cAAC2E,EAAA,EAASC,KAAV,CAAeC,SAAU7E,EAAzB,mBACA,cAAC2E,EAAA,EAASC,KAAV,CAAeC,SAAU7E,EAAzB,oBACA,cAAC2E,EAAA,EAASC,KAAV,CAAeC,SAAU7E,EAAzB,sBACA,cAAC2E,EAAA,EAASC,KAAV,CAAeC,SAAU7E,EAAzB,0BAEJ,cAAC8E,EAAA,EAAD,CAAa,aAAW,mBAAmBC,MAAOrG,KAAKyC,MAAMvD,mBAIrE,cAACyG,EAAA,EAAD,UACI,cAACW,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,WAAS,EAACC,OAAK,EAACC,YAAU,EAACzF,UAAU,OAApD,UACI,gCACI,6BAnDZ,CACZ,CAAEb,OAAQ,eACV,CAAEA,OAAQ,UACV,CAAEA,OAAQ,cACV,CAAEA,OAAQ,aACV,CAAEA,OAAQ,cACV,CAAEA,OAAQ,cACV,CAAEA,OAAQ,cACV,CAAEA,OAAQ,YA4C2BM,IAAIZ,KAAK6G,yBAGrB/D,GAAUA,EAAOgE,OAAS,EACtB,gCAAQhE,EAAOlC,IAAIZ,KAAKoE,qBACtB,6BAAK,2BAM5B,cAAC,EAAD,CAAOlD,qBAAqB,EAAMnB,KAAMC,KAAKyC,MAAMqB,uBAAwB5D,OAAQ,kBAAM,EAAKoC,uBAAsB,IAAQlB,UAAW,kBAAM,EAAKiB,eAAe5B,WAAYT,KAAKyC,MAAMhC,WAAYE,UAAWX,KAAKyC,MAAM9B,YAC1N,cAAC,EAAD,CAAOO,qBAAqB,EAAOnB,KAAMC,KAAKyC,MAAMsB,yBAA0B7D,OAAQ,kBAAM,EAAKmE,wBAAuB,IAAQ5D,WAAYT,KAAKyC,MAAMhC,WAAYE,UAAWX,KAAKyC,MAAM9B,YAEzL,cAAC,EAAD,CAAOO,qBAAqB,EAAMnB,KAAMC,KAAKyC,MAAMuB,mBAAoB9D,OAAQ,kBAAM,EAAKmD,iBAAgB,IAAQjC,UAAW,kBAAM,EAAKgC,eAAe3C,WAAYT,KAAKyC,MAAMhC,WAAYE,UAAWX,KAAKyC,MAAM9B,YAChN,cAAC,EAAD,CAAOO,qBAAqB,EAAOnB,KAAMC,KAAKyC,MAAMwB,wBAAyB/D,OAAQ,kBAAM,EAAK6G,wBAAuB,IAAQtG,WAAYT,KAAKyC,MAAMhC,WAAYE,UAAWX,KAAKyC,MAAM9B,sB,GAzTpLU,a,iEC0BT,QAAE2F,qBAjCjB,SAA8BC,GAE1BxB,QAAQC,IAAI,0CAA2CuB,GACvD,IAAIC,EAAuBD,EAW3B,OARAC,GADAA,GADAA,EAAuBA,EAAqBC,QAAQ,MAAM,KACbA,QAAQ,IAAI,KACbA,QAAQ,MAAM,IAE1D1B,QAAQC,IAAI,2CAA4CwB,GAEpDA,EAAqBE,WAAW,SAChCF,EAAuBA,EAAqBC,QAAQ,SAAS,MAG7B,KAAhCD,EAAqBJ,QACrBrB,QAAQC,IAAI,+CAAgDwB,GACrD,IAGNA,EAAqBE,WAAW,OAKrC3B,QAAQC,IAAI,qCAAsCwB,GAC3CA,IALHzB,QAAQC,IAAI,4DAA6DwB,GAClE,KAYwBG,cALvC,SAAuBC,GAEnB,MADc,wJACDC,KAAKC,OAAOF,GAAOG,iBClB9BC,GAAQC,aAAY,CACtBC,QAAS,CACLC,QAAS,CACLC,KAAM,UACNC,aAAc,cA0XXC,G,kDAnXX,WAAY/H,GAAQ,IAAD,8BACf,cAAMA,IAwCVgI,sBAzCmB,uCAyCK,WAAOC,GAAP,eAAAlG,EAAA,sDACZ4B,EAAe,EAAKnB,MAApBmB,WAER,EAAKzB,SAAS,CAAE0C,UAAWqD,IAE3BtE,EAAWkB,SAAQ,SAAAD,GACXqD,IAAmBrD,EAAUsD,MAC7B,EAAKhG,SAAS,CAAEiG,YAAavD,EAAUI,SAP3B,2CAzCL,wDA4GnBoD,aA5GmB,uCA4GJ,WAAOC,GAAP,yCAAAtG,EAAA,2DACsF,EAAKS,MAA9F2F,EADG,EACHA,YAAaG,EADV,EACUA,YAAaC,EADvB,EACuBA,UAAWC,EADlC,EACkCA,UAAWC,EAD7C,EAC6CA,UAAWC,EADxD,EACwDA,SAAUC,EADlE,EACkEA,SAAUtB,EAD5E,EAC4EA,MAEvFgB,EAAMO,iBACNP,EAAMQ,kBAEN,EAAKC,iBACL,EAAK5G,SAAS,CAAExB,UAAW,KACvBqI,EAAWtF,IAAO8E,EAAY,IAAMC,GAEpCQ,EAAoBC,GAAUlC,qBAAqB4B,GACnDO,EAAaD,GAAU7B,cAAcC,GACrC8B,EAAS,KAEThB,GAAeG,GAAeC,GAAaC,GAAaC,GAAaC,GAAYC,GAAYtB,GAdtF,oBAgBF2B,GAAsBE,EAhBpB,iBAiBEF,EAYD,EAAKI,oBAXL5D,QAAQC,IAAI,uBAAwBuD,GACpC,EAAKF,iBACLK,EAAOlH,KAAK,oEACZ,EAAKC,SAAS,CACVmH,iBAAkB,qCAClBC,iBAAiB,EACjBC,eAAe,EACfC,aAAa,KAMhBN,EAcD,EAAKO,mBAbLjE,QAAQC,IAAI,gBAAiByD,GAC7B,EAAKJ,iBAELK,EAAOlH,KAAK,8BAEZ,EAAKC,SAAS,CACVwH,gBAAiB,6BACjBC,gBAAgB,EAChBC,cAAc,EACdJ,aAAa,KAOrB,EAAKtH,SAAS,CAAE1B,WAAYgB,EAA2Bd,UAAWyI,IAClE3D,QAAQC,IAAI,iBAAkB,EAAKjD,MAAM9B,WACzC,EAAKmJ,aAlDF,+BAsDGtK,EAAU,CACZwF,YAAaoD,EACb9C,iBAAkBiD,EAClBnD,UAAWsD,EACXrD,SAAUsD,EACVxD,cAAe8D,EACfc,MAAOzC,EACP0C,WAAW,EACXrF,cAAeqE,EACfiB,YAAY,EACZvH,OAAQ,UAEZ+C,QAAQC,IAAI,mDAAoDlG,GAlE7D,UAoEGd,EAAIU,YAAYI,GACjBmD,MAAK,SAAAC,GACFwG,EAAOlH,KAAKV,GACZ,EAAKW,SAAS,CACV0C,UAAW,GACXuD,YAAa,GACbG,YAAa,GACbC,UAAW9E,MAASkB,OAAO,cAC3B6D,UAAW,OACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVtB,MAAO,GACPiC,iBAAiB,EACjBC,eAAe,EACfI,gBAAgB,EAChBC,cAAc,EACdpJ,WAAYc,EACZZ,UAAWyI,GACZ,EAAKU,aAAc,EAAKI,mBAE9BC,OAAM,SAAAC,GACyB,MAAxBA,EAAIC,SAASC,SACblB,EAAOlH,KAAKR,GACZ,EAAKS,SAAS,CACVxB,UAAWyI,EACX3I,WAAYgB,GACb,EAAKqI,kBA/FjB,gCAsGPV,EAAOlH,KAAK,oCACZ,EAAKC,SAAS,CACV1B,WAAY,sBACZE,UAAWyI,IAEf,EAAKU,aA3GE,4CA5GI,wDA2NnBrG,kBA3NmB,sBA2NC,sBAAAzB,EAAA,sEACVtD,EAAIgB,gBAAgBiD,MAAK,SAAAiB,GAC3B,EAAKzB,SAAS,CACVyB,WAAYA,EAAWb,UAHf,2CAzNhB,EAAKN,MAAQ,CACToC,UAAW,GACXuD,YAAa,GACbG,YAAa,GACbC,UAAW9E,MAASkB,OAAO,cAC3B6D,UAAW,OACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVtB,MAAO,GACPmC,aAAa,EACbF,iBAAiB,EACjBC,eAAe,EACfI,gBAAgB,EAChBC,cAAc,EACdU,SAAS,EACT9J,WAAY,GACZE,UAAW,GACX2I,iBAAkB,6BAClBK,gBAAiB,qBACjB/F,WAAY,IAEhB,EAAKqE,sBAAwB,EAAKA,sBAAsB9D,KAA3B,gBAC7B,EAAKqG,wBAA0B,EAAKA,wBAAwBrG,KAA7B,gBAC/B,EAAKsG,sBAAwB,EAAKA,sBAAsBtG,KAA3B,gBAC7B,EAAKuG,sBAAwB,EAAKA,sBAAsBvG,KAA3B,gBAC7B,EAAKwG,sBAAwB,EAAKA,sBAAsBxG,KAA3B,gBAC7B,EAAKyG,qBAAuB,EAAKA,qBAAqBzG,KAA1B,gBAC5B,EAAK0G,qBAAuB,EAAKA,qBAAqB1G,KAA1B,gBAC5B,EAAK2G,kBAAoB,EAAKA,kBAAkB3G,KAAvB,gBACzB,EAAKkE,aAAe,EAAKA,aAAalE,KAAlB,gBAEpB,EAAK2F,WAAa,EAAKA,WAAW3F,KAAhB,gBAClB,EAAK4G,UAAY,EAAKA,UAAU5G,KAAf,gBACjB,EAAK4E,eAAiB,EAAKA,eAAe5E,KAApB,gBACtB,EAAK+F,aAAe,EAAKA,aAAa/F,KAAlB,gBArCL,E,2DAqDnB,SAAwB6G,GACpBhL,KAAKmC,SAAS,CAAEoG,YAAayC,M,mCAGjC,SAAsBC,GAClB,IAAM1G,EAAOb,IAAOuH,GAAgBrG,OAAO,cAC3Ca,QAAQC,IAAI,UAAYnB,EAAK2G,YAC7BlL,KAAKmC,SAAS,CAAEqG,UAAWjE,M,mCAG/B,SAAsB4G,GAClB1F,QAAQC,IAAI,UAAYyF,EAAeD,YACvClL,KAAKmC,SAAS,CAAEsG,UAAW0C,M,mCAG/B,SAAsBC,GAClBpL,KAAKmC,SAAS,CAAEuG,UAAW0C,EAAeC,OAAOhF,U,kCAGrD,SAAqBiF,GACjBtL,KAAKmC,SAAS,CAAEwG,SAAU2C,EAAcD,OAAOhF,U,kCAGnD,SAAqBkF,GACjBvL,KAAKmC,SAAS,CAAEyG,SAAU2C,EAAcF,OAAOhF,U,+BAGnD,SAAkBmF,GACdxL,KAAKmC,SAAS,CAAEmF,MAAOkE,EAAWH,OAAOhF,U,4BAG7C,WACIrG,KAAKmC,SAAS,CAAEsH,aAAa,M,8BAGjC,WACIzJ,KAAKmC,SAAS,CAAEoH,iBAAiB,EAAOC,eAAe,EAAMF,iBAAkB,O,6BAGnF,WACItJ,KAAKmC,SAAS,CAAEyH,gBAAgB,EAAOC,cAAc,EAAMF,gBAAiB,O,0BAGhF,WACI3J,KAAKmC,SAAS,CAAEsH,aAAa,M,wBAGjC,WACIzJ,KAAKmC,SAAS,CAAEoI,SAAS,M,uBAG7B,SAAUjG,GACNtE,KAAKmC,SAAS,CAAEoI,QAASjG,M,gCA0H7B,SAAmBO,EAAWH,GAC1B,OACI,cAACuB,EAAA,EAASC,KAAV,CAAeC,SAAUtB,EAAUsD,KAAnC,SAA0CtD,EAAUK,S,oBAM5D,WAAU,IAAD,uCACL,EAAuDlF,KAAKyC,MAApDmB,EAAR,EAAQA,WAAY2G,EAApB,EAAoBA,QAAS5J,EAA7B,EAA6BA,UAAWF,EAAxC,EAAwCA,WACxC,OACI,gCAEI,sBAAKU,UAAU,UAAf,UACI,0DACA,6CAAe,UAAAnB,KAAKyC,aAAL,eAAYoC,WAAY7E,KAAKyC,MAAMoC,UAAY,cAC9D,+CAAiB,UAAA7E,KAAKyC,aAAL,eAAY2F,aAAcpI,KAAKyC,MAAM2F,YAAc,cACpE,iDAAmB,UAAApI,KAAKyC,aAAL,eAAY8F,aAAcvI,KAAKyC,MAAM8F,YAAc,cACtE,6CAAe,UAAAvI,KAAKyC,aAAL,eAAY+F,WAAY9E,IAAO1D,KAAKyC,MAAM+F,WAAW5D,OAAO,uBAAyB,cACpG,6CAAe,UAAA5E,KAAKyC,aAAL,eAAYgG,WAAYzI,KAAKyC,MAAMgG,UAAY,cAC9D,6CAAe,UAAAzI,KAAKyC,aAAL,eAAYiG,WAAY1I,KAAKyC,MAAMiG,UAAY,cAC9D,4CAAc,UAAA1I,KAAKyC,aAAL,eAAYkG,UAAW3I,KAAKyC,MAAMkG,SAAW,cAC3D,4CAAc,UAAA3I,KAAKyC,aAAL,eAAYmG,UAAW5I,KAAKyC,MAAMmG,SAAW,cAC3D,yCAAW,UAAA5I,KAAKyC,aAAL,eAAY6E,OAAQtH,KAAKyC,MAAM6E,MAAQ,cAClD,8CAAgB,UAAAtH,KAAKyC,aAAL,eAAYmB,YAAa,YAAc,cACvD,sDAAwB,UAAA5D,KAAKyC,aAAL,eAAYgH,aAAczJ,KAAKyC,MAAMgH,YAAYyB,WAAa,WACtF,mDAAqB,UAAAlL,KAAKyC,aAAL,eAAY8H,SAAUvK,KAAKyC,MAAM8H,QAAQW,WAAa,WAC3E,sDAAwB,UAAAlL,KAAKyC,aAAL,eAAYhC,YAAaT,KAAKyC,MAAMhC,WAAa,cACzE,qDAAuB,UAAAT,KAAKyC,aAAL,eAAY9B,WAAY,YAAc,cAC7D,2DAA6B,UAAAX,KAAKyC,aAAL,SAAY8G,gBAAkBvJ,KAAKyC,MAAM8G,gBAAgB2B,eACtF,yDAA2B,UAAAlL,KAAKyC,aAAL,eAAY+G,eAAgBxJ,KAAKyC,MAAM+G,cAAc0B,WAAalL,KAAKyC,MAAM8G,gBAAgB2B,iBAE5H,sBAAK/J,UAAU,yBAAf,UACI,cAACwE,EAAA,EAAD,UACI,sBAAMxE,UAAU,gBAAhB,4BAMJ,cAACwE,EAAA,EAAD,UACI,cAACW,EAAA,EAAD,CAAKmF,GAAI,EAAT,SACI,gCACI,oBAAItK,UAAU,OAAd,2BACA,eAACuK,EAAA,EAAD,CAAM3F,GAAG,SAAS4F,YAAU,EAACC,UAAW5L,KAAKyC,MAAMgH,YAAaoC,SAAU7L,KAAKqI,aAA/E,UAEI,eAACzC,EAAA,EAAD,CAAYzE,UAAU,OAAtB,UACI,cAAC0E,EAAA,EAAD,CACI7E,QAAQ,oBACR8E,MAAM,aACNC,GAAG,oBACHC,SAAUhG,KAAKiI,sBAJnB,SAMKrE,EAAWhD,IAAIZ,KAAK8L,sBAEzB,cAACJ,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAACC,KAAK,iBAAiB,aAAW,iBAAiB5F,MAAOrG,KAAKyC,MAAMoC,YAC3F,cAAC6G,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,wCAGJ,eAACvG,EAAA,EAAD,CAAYzE,UAAU,OAAtB,UACI,eAAC0E,EAAA,EAAD,CACI7E,QAAQ,oBACR8E,MAAM,qBACNC,GAAG,sBACHC,SAAUhG,KAAKwK,wBAJnB,UAMI,cAACvE,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,kBAEJ,cAACuF,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAAC,aAAW,wBAAwB3F,MAAOrG,KAAKyC,MAAM8F,cAC5E,cAACmD,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,gDAGJ,eAACvG,EAAA,EAAD,CAAYzE,UAAU,OAAtB,UACI,cAAC,IAAD,CAAyBiL,MAAOC,KAAhC,SACI,cAACC,GAAA,EAAD,CAAe5E,MAAOA,GAAtB,SACA,cAAC6E,EAAA,EAAD,CACIvL,QAAQ,SACRwL,MAAM,aACN5H,OAAO,iBACPyB,MAAOrG,KAAKyC,MAAM+F,UAClBiE,SAAUzM,KAAKyK,sBACfiC,aAAW,EACXC,QAAM,QAId,eAAC9G,EAAA,EAAD,CACI7E,QAAQ,oBACR8E,MAAM,aACNC,GAAG,oBACHC,SAAUhG,KAAK0K,sBAJnB,UAMI,cAACzE,EAAA,EAASC,KAAV,CAAeC,SAAS,OAAxB,kBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,sBAEJ,cAACuF,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAAC,aAAW,iBAAiB3F,MAAOrG,KAAKyC,MAAMgG,eAGzE,oBAAItH,UAAU,OAAd,6BAEA,eAACyL,EAAA,EAAD,CAAeC,UAAU,oBAAoBL,MAAM,aAAnD,UACI,cAACd,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAACG,KAAK,OAAOW,YAAY,YAAYzG,MAAOrG,KAAKyC,MAAMiG,UAAW+D,SAAUzM,KAAK2K,wBACvG,cAACe,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,wCAEJ,eAACS,EAAA,EAAD,CAAeC,UAAU,mBAAmBL,MAAM,YAAYrL,UAAU,OAAxE,UACI,cAACuK,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAACe,UAAU,KAAKZ,KAAK,OAAOW,YAAY,WAAWzG,MAAOrG,KAAKyC,MAAMkG,SAAU8D,SAAUzM,KAAK4K,uBACpH,cAACc,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,uCAGJ,eAACS,EAAA,EAAD,CAAeC,UAAU,mBAAmBL,MAAM,aAAarL,UAAU,OAAzE,UACI,cAACuK,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAACG,KAAK,OAAOW,YAAY,WAAWE,QAAShN,KAAKyC,MAAM+G,cAAeyD,UAAWjN,KAAKyC,MAAM8G,gBAAiBlD,MAAOrG,KAAKyC,MAAMmG,SAAU6D,SAAUzM,KAAK6K,uBAC/K,cAACa,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,SAAuCnM,KAAKyC,MAAM6G,sBAEtD,eAACsD,EAAA,EAAD,CAAeC,UAAU,gBAAgBL,MAAM,QAAQrL,UAAU,OAAjE,UACI,cAACuK,EAAA,EAAKK,QAAN,CAAcC,UAAQ,EAACG,KAAK,QAAQW,YAAY,QAAQE,QAAShN,KAAKyC,MAAMoH,aAAcoD,UAAWjN,KAAKyC,MAAMmH,eAAgBvD,MAAOrG,KAAKyC,MAAM6E,MAAOmF,SAAUzM,KAAK8K,oBACxK,cAACY,EAAA,EAAKK,QAAQG,SAAd,CAAuBC,KAAK,UAA5B,SAAuCnM,KAAKyC,MAAMkH,qBAGtD,oBAAIxI,UAAU,OAAd,qBAEA,cAACJ,EAAA,EAAD,CAAQoL,KAAK,SAAShL,UAAU,gBAAhC,oBACA,cAAC,EAAD,CAAOpB,KAAMwK,EAASrK,OAAQ,kBAAM,EAAK6K,WAAU,IAAQtK,WAAYA,EAAYE,UAAWA,wB,GAzW1GU,aCST6L,OAzBf,WACE,OACE,sBAAK/L,UAAU,UAAf,UAEE,cAACgM,EAAA,EAAD,CAAWC,OAAK,EAACjM,UAAU,2CAA3B,SACE,cAACmF,EAAA,EAAD,CAAKmF,GAAI,GAAT,SACE,sBAAMtK,UAAU,gBAAhB,6BAIJ,cAACgM,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACzH,EAAA,EAAD,WACE,cAACW,EAAA,EAAD,CAAKmF,GAAI,EAAT,SACE,cAAC,EAAD,MAEF,cAACnF,EAAA,EAAD,CAAKmF,GAAI,EAAT,SACE,cAAC,GAAD,eCTG4B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5K,MAAK,YAAkD,IAA/C6K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,GAAD,IAEA,wBAAQC,IAAI,sDAAsDC,aAAW,IAC7E,wBACED,IAAI,8DACJC,aAAW,IACb,wBACED,IAAI,qEACJC,aAAW,OAIfC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.dfd32656.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8000/api',\n})\n\n// ---------- VISITS ---------- //\n// ----- GET ----- //\nexport const getAllVisits = () => api.get(`/visits`);\nexport const getVisitsByStatus = (visitStatus, currentDate) => api.get(`/visits/${visitStatus}/${currentDate}`);\n\n// ----- POST ----- //\nexport const createVisit = visitPayload => api.post(`/visits`, visitPayload);\n\n// ----- PUT ----- //\nexport const updateVisitStatus = (payload) => api.put(`/visit/updateVisitStatus`, payload);\n\n// --------- REF DATA ------- //\n\nexport const getVisitTypes = () => api.get(`/visitTypes`);\n\nexport const getVisitTypesByCode = visitTypeCode => api.get(`/visitTypes/${visitTypeCode}`);\n\n\nconst apis = {\n    getAllVisits,\n    getVisitsByStatus,\n    createVisit,\n    updateVisitStatus,\n    getVisitTypes,\n    getVisitTypesByCode\n}\n\nexport default apis","import { Button, Modal } from 'react-bootstrap';\nimport React, { Component } from 'react';\n\nclass Popup extends Component {\n\n    render() {\n\n        return (\n            <>  \n              <Modal\n                show={this.props.show}\n                onHide={this.props.onHide}\n                backdrop=\"static\"\n                keyboard={false}\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>{this.props.popupTitle}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  {this.props.popupDesc ? this.props.popupDesc.map(desc => <p>{desc}</p>) : \"Test\"}\n\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={this.props.onHide}>Close</Button>\n                  {this.props.isConfirmationPopup && (<Button className=\"kcButton\" onClick={this.props.onConfirm}>OK</Button>)}\n                </Modal.Footer>\n              </Modal>\n            </>\n          );\n    }\n  }\n  \nexport default Popup;","const VisitStatus = {\n    STATUS_BOOKED: \"Booked\",\n    STATUS_CANCELLED: \"Cancelled\",\n    STATUS_ATTENDED: \"Attended\",\n    STATUS_ALL: \"All\",\n    STATUS_TODAY: \"Today\"\n};\n\nconst SuccessTitle = {\n    SUCC_BOOK_TITLE: \"Visit created!\",\n    SUCC_CANCEL_TITLE: \"Visit cancelled!\",\n    SUCC_ATTEND_TITLE: \"Visit attended!\"\n}\n\nconst SuccessDescription = {\n    SUCC_BOOK_DESC: \"Visit will now appear in the visit list.\",\n    SUCC_CANCEL_DESC: \"Visit has now been cancelled from the visit list.\",\n    SUCC_ATTEND_DESC: \"Visit has now been marked as attended on the visit list.\"\n}\n\nconst ErrorCode = {\n    ERR_BOOK: \"ERR_BOOK\",\n    ERR_CANCEL: \"ERR_CANCEL\",\n    ERR_ATTEND: \"ERR_ATTEND\",\n    ERR_EDIT: \"ERR_EDIT\"\n}\n\nconst ErrorTitle = {\n    ERR_BOOK_TITLE: \"Error booking a visit\",\n    ERR_CANCEL_TITLE: \"Error cancelling a visit\",\n    ERR_ATTEND_TITLE: \"Error attending a visit\",\n    ERR_EDIT_TITLE: \"Error editing a visit\"\n}\n\nconst ErrorDescription = {\n    ERR_BOOK_DESC: \"Please review the information inputted in the form.\"\n}\n\nconst WarningTitle = {\n    WARN_CANCEL_TITLE: \"Cancelling a visit\",\n    WARN_ATTEND_TITLE: \"Marking as Attended\"\n}\n\nconst WarningDescription = {\n    WARN_CANCEL_DESC: \"You are about to cancel this visit. Please confirm before doing so.\",\n    WARN_ATTEND_DESC: \"You are about to mark this visit as attended. Please confirm before doing so.\"\n}\n\nexport { VisitStatus, ErrorCode, ErrorDescription, ErrorTitle, SuccessTitle, SuccessDescription, WarningTitle,\nWarningDescription };","import { Col, Dropdown, DropdownButton, FormControl, InputGroup, Row, Table } from 'react-bootstrap';\nimport api from '../api';\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport Popup from '../molecules/Popup';\nimport { VisitStatus, SuccessTitle, WarningTitle, WarningDescription, SuccessDescription } from '../constants';\n\nclass OurVisits extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            visits: [],\n            columns: [],\n            visitTypes: [],\n            visitId: '',\n            isLoading: false,\n            visitStatus: VisitStatus.STATUS_TODAY,\n            dateToday: \"\",\n            confirmationPopupShown: false,\n            cancelSucccessPopupShown: false,\n            attendedPopupShown: false,\n            attendSuccessPopupShown: false,\n            isConfirmed: false,\n            popupTitle: \"\",\n            popupDesc: []\n        }\n\n        this.handleCancelVisit = this.handleCancelVisit.bind(this);\n        this.handleAttendVisit = this.handleAttendVisit.bind(this);\n        this.populateTableData = this.populateTableData.bind(this);\n        this.handleVisitStatusSelect = this.handleVisitStatusSelect.bind(this);\n\n        this.setConfirmationPopupShown = this.setConfirmationPopupShown.bind(this);\n        this.setCancelSucccessPopupShown = this.setCancelSucccessPopupShown.bind(this);\n        this.setOnConfirmationHide = this.setOnConfirmationHide.bind(this);\n        this.setOnCancelSuccessHide = this.setOnCancelSuccessHide.bind(this);\n\n        this.setAttendedPopupShown = this.setAttendedPopupShown.bind(this);\n        this.setAttendSuccessPopupShown = this.setAttendSuccessPopupShown.bind(this);\n\n    }\n\n    setOnConfirmationHide(showModal) {\n        this.setState({ confirmationPopupShown: showModal });\n    }\n\n    setOnCancelSuccessHide(showModal) {\n        this.setState({ cancelSucccessPopupShown: showModal });\n    }\n\n    setOnAttendHide(showModal) {\n        this.setState({ attendedPopupShown: showModal  });\n    }\n\n    setOnAttendSuccessHide(showModal) {\n        this.setState({ attendSuccessPopupShown: showModal });\n    }\n\n    setConfirmationPopupShown() {\n        this.setState({ confirmationPopupShown: true});\n    }\n\n    setCancelSucccessPopupShown() {\n        this.setState({ cancelSucccessPopupShown: true});\n    }\n\n    setAttendedPopupShown() {\n        this.setState({ attendedPopupShown: true});\n    }\n\n    setAttendSuccessPopupShown() {\n        this.setState({ attendSuccessPopupShown: true});\n    }\n\n    handleCancelVisit = async (visitId) => {\n        var warnings = [];\n        warnings.push(WarningDescription.WARN_CANCEL_DESC);\n        this.setState({ visitId: visitId, popupTitle: WarningTitle.WARN_CANCEL_TITLE, popupDesc: warnings });\n\n        this.setConfirmationPopupShown();\n\n    }\n\n    cancelVisit = async () => {\n\n        this.setOnConfirmationHide(false);\n\n        var successes = [];\n        successes.push(SuccessDescription.SUCC_CANCEL_DESC);\n\n        this.setState({ popupTitle: SuccessTitle.SUCC_CANCEL_TITLE, popupDesc: successes });\n\n        const payload = {\n            VisitId: this.state.visitId,\n            Status: VisitStatus.STATUS_CANCELLED\n        };\n\n        await api.updateVisitStatus(payload).then(res =>{\n            this.setCancelSucccessPopupShown();\n        });\n\n        if (this.state.visitStatus === VisitStatus.STATUS_ALL) {\n            await api.getAllVisits().then(visits => {\n                this.setState({\n                    visitStatus: VisitStatus.STATUS_ALL,\n                    visits: visits.data,\n                    isloading: false\n                });\n            })\n        }\n        else {\n            await api.getVisitsByStatus(this.state.visitStatus).then(visits => {\n                this.setState({\n                    visits: visits.data,\n                    isLoading: false\n                });\n            })\n        }\n    }\n\n    handleAttendVisit = async (visitId) => {\n        \n        var warnings = [];\n        warnings.push(WarningDescription.WARN_ATTEND_DESC);\n\n        this.setState({ visitId: visitId, popupTitle: WarningTitle.WARN_ATTEND_TITLE, popupDesc: warnings });\n\n        this.setAttendedPopupShown();\n    }\n\n    attendVisit = async () => {\n\n        this.setOnAttendHide(false);\n\n        var successes = [];\n        successes.push(SuccessDescription.SUCC_ATTEND_DESC);\n\n        this.setState({ popupTitle: SuccessTitle.SUCC_ATTEND_TITLE, popupDesc: successes });\n\n        const payload = {\n            VisitId: this.state.visitId,\n            Status: VisitStatus.STATUS_ATTENDED\n        };\n\n        await api.updateVisitStatus(payload).then(res => {\n            this.setAttendSuccessPopupShown();\n        })\n\n        if (this.state.visitStatus === VisitStatus.STATUS_ALL) {\n            await api.getAllVisits().then(visits => {\n                this.setState({\n                    visitStatus: VisitStatus.STATUS_ALL,\n                    visits: visits.data,\n                    isloading: false\n                });\n            })\n        }\n        else {\n            await api.getVisitsByStatus(this.state.visitStatus, this.state.dateToday).then(visits => {\n                this.setState({\n                    visits: visits.data,\n                    isLoading: false\n                });\n            })\n        }\n    }\n\n    handleVisitStatusSelect = async (visitStatus) => {\n        this.setState({ visitStatus: visitStatus });\n\n        if (visitStatus === VisitStatus.STATUS_ALL) {\n            await api.getAllVisits().then(visits => {\n                this.setState({\n                    visitStatus: VisitStatus.STATUS_ALL,\n                    visits: visits.data,\n                    isloading: false\n                });\n            })\n        }\n        else {\n            await api.getVisitsByStatus(visitStatus, this.state.dateToday).then(visits => {\n                this.setState({\n                    visitStatus: visitStatus,\n                    visits: visits.data,\n                    isLoading: false\n                });\n            })\n        }\n    }\n\n    componentDidMount = async () => {\n        var dateToday = moment().startOf('day');\n        this.setState({ isLoading: false, dateToday: dateToday });\n\n        await api.getVisitsByStatus(\"Today\", dateToday).then(visits => {\n            this.setState({\n                visits: visits.data,\n                isLoading: false\n            });\n        })\n\n        await api.getVisitTypes().then(visitTypes => {\n            this.setState({\n                visitTypes: visitTypes.data\n            })\n        });\n    }\n\n    isVisitToday(visitId, date) {\n        var isCurrentDate = moment(date).startOf('day').isSameOrBefore(moment().startOf('day'));\n        return isCurrentDate ? (<i className=\"bi-person-check icon\" onClick={() => this.handleAttendVisit(visitId)}></i>) : '';\n    }\n\n    populateTableData(visit, index) {\n        const date = moment(visit.VisitDateTime).format('DD MMM YYYY hh:mm A');\n        var visitType = '';\n\n        this.state.visitTypes.forEach(vt => {\n            if (visit.VisitTypeId === vt._id) {\n                visitType = vt.Name\n            }\n        });\n\n        return (\n            <tr key={index}>\n                <td>{visit.ContactNumber}</td>\n                <td>{visit.Status}</td>\n                <td>{visit.FirstName}</td>\n                <td>{visit.LastName}</td>\n                <td>{visitType}</td>\n                <td>{date}</td>\n                <td>{visit.NumberOfVisitors}</td>\n                    {visit.Status === VisitStatus.STATUS_BOOKED ?\n                        (<td>\n                            <i className=\"bi-trash icon\" alt=\"Cancel\" onClick={() => this.handleCancelVisit(visit._id)}></i>\n                            {this.isVisitToday(visit._id, date)}\n                        </td>)\n                        : (<td>-</td>)\n                    }\n            </tr>\n        )\n    }\n\n    populateTableHeader(columns) {\n        return (\n            <th>{columns.Header}</th>\n        )\n    }\n\n    render() {\n        const { visits } = this.state;\n        console.log('VisitsList -> render -> visits', visits);\n\n        const columns = [\n            { Header: 'Contact No.' },\n            { Header: 'Status' },\n            { Header: 'First Name' },\n            { Header: 'Last Name' },\n            { Header: 'Visit Type'},\n            { Header: 'Visit Time' },\n            { Header: '# Visitors' },\n            { Header: 'Actions' }\n        ];\n\n        return (\n            <div>\n                <div className=\"testBox2\">\n                    <h2>Test - View state values</h2>\n                    <p>Visits: {this.state?.visits ? \"Has value\" : \"No value\"}</p>\n                    <p>VisitStatus: {this.state?.visitStatus ? this.state.visitStatus : \"No value\"}</p>\n                    <p>VisitTypes: {this.state?.visitTypes ? \"Has value\" : \"No value\"}</p>\n                    <p>DateToday: {this.state?.dateToday ? \"Has value\" : \"No value\"}</p>\n                    <p>VisitId: {this.state?.visitId ? this.state.visitId : \"No value\"}</p>\n\n                </div>\n                <div className=\"section whiteBkg mt-4\">\n                    <Row>\n                        <span className=\"sectionHeader\">\n                            our visits\n                    </span>\n                    </Row>\n\n                    <Row className=\"mt-3\">\n                        <InputGroup className=\"mt-3\">\n                            <DropdownButton\n                                variant=\"outline-secondary\"\n                                title=\"Visit Status\"\n                                id=\"visitStatusDropdown\"\n                                onSelect={this.handleVisitStatusSelect}\n                            >\n                                <Dropdown.Item eventKey={VisitStatus.STATUS_ALL}>All</Dropdown.Item>\n                                <Dropdown.Item eventKey={VisitStatus.STATUS_TODAY}>Today</Dropdown.Item>\n                                <Dropdown.Item eventKey={VisitStatus.STATUS_BOOKED}>Booked</Dropdown.Item>\n                                <Dropdown.Item eventKey={VisitStatus.STATUS_ATTENDED}>Attended</Dropdown.Item>\n                                <Dropdown.Item eventKey={VisitStatus.STATUS_CANCELLED}>Cancelled</Dropdown.Item>\n                            </DropdownButton>\n                            <FormControl aria-label=\"VisitStatusValue\" value={this.state.visitStatus} />\n                        </InputGroup>\n                    </Row>\n\n                    <Row>\n                        <Col xs={12}>\n                            <Table striped condensed hover responsive className=\"mt-4\">\n                                <thead>\n                                    <tr>\n                                        {columns.map(this.populateTableHeader)}\n                                    </tr>\n                                </thead>\n                                    {visits && visits.length > 0 ? \n                                        (<tbody>{visits.map(this.populateTableData)}</tbody>)\n                                        : (<tr>{\"No appointments\"}</tr>)\n                                    }                                    \n                            </Table>\n                        </Col>\n                    </Row>\n\n                    <Popup isConfirmationPopup={true} show={this.state.confirmationPopupShown} onHide={() => this.setOnConfirmationHide(false)} onConfirm={() => this.cancelVisit()} popupTitle={this.state.popupTitle} popupDesc={this.state.popupDesc} />\n                    <Popup isConfirmationPopup={false} show={this.state.cancelSucccessPopupShown} onHide={() => this.setOnCancelSuccessHide(false)} popupTitle={this.state.popupTitle} popupDesc={this.state.popupDesc} />\n\n                    <Popup isConfirmationPopup={true} show={this.state.attendedPopupShown} onHide={() => this.setOnAttendHide(false)} onConfirm={() => this.attendVisit()} popupTitle={this.state.popupTitle} popupDesc={this.state.popupDesc} />\n                    <Popup isConfirmationPopup={false} show={this.state.attendSuccessPopupShown} onHide={() => this.setOnAttendSuccessHide(false)} popupTitle={this.state.popupTitle} popupDesc={this.state.popupDesc} />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OurVisits;","function ValidateMobileNumber(mobileNumber) {\n\n    console.log('mobileNoValidator -> mobileNumber param', mobileNumber);\n    var cleansedMobileNumber = mobileNumber;\n    cleansedMobileNumber = cleansedMobileNumber.replace(/\\s/g,\"\");\n    cleansedMobileNumber =  cleansedMobileNumber.replace(\"+\",\"\");\n    cleansedMobileNumber = cleansedMobileNumber.replace(/\\D/g,\"\");\n\n    console.log('mobileNoValidator -> after regex cleanse', cleansedMobileNumber);\n\n    if (cleansedMobileNumber.startsWith(\"614\")) {\n        cleansedMobileNumber = cleansedMobileNumber.replace(/^.{2}/g,\"0\");\n    }\n\n    if (cleansedMobileNumber.length !== 10) {\n        console.log('mobileNoValidator -> incorrect cleansed num:', cleansedMobileNumber);\n        return \"\";\n    }\n\n    if (!cleansedMobileNumber.startsWith(\"04\")) {\n        console.log('mobileNoValidator -> cleansed num does not begin with 04:', cleansedMobileNumber);\n        return \"\";   \n    }\n\n    console.log('mobileNoValidator -> cleansed num:', cleansedMobileNumber);\n    return cleansedMobileNumber;\n}\n\nfunction ValidateEmail(email) {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n}\n\nexport default { ValidateMobileNumber, ValidateEmail }","import { Button, InputGroup, Col, Dropdown, DropdownButton, FloatingLabel, Form, Row } from 'react-bootstrap';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React, { Component } from 'react';\nimport MomentFnsUtils from '@date-io/moment';\nimport moment from 'moment';\nimport api from '../api/';\nimport Popup from '../molecules/Popup';\nimport { ErrorDescription, ErrorTitle, SuccessDescription, SuccessTitle } from '../constants';\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Validator from '../validators/BookVisitFormValidator';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#8ab073',\n            contrastText: '#FFFFFF'\n        },\n    }\n});\n\nclass BookVisit extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            visitType: '',\n            visitTypeId: '',\n            numVisitors: '',\n            visitDate: moment().format('YYYY-MM-DD'),\n            visitTime: '9:00',\n            firstName: '',\n            lastName: '',\n            mobileNo: '',\n            email: '',\n            isValidated: false,\n            isMobileInvalid: false,\n            isMobileValid: false,\n            isEmailInvalid: false,\n            isEmailValid: false,\n            isShown: false,\n            popupTitle: '',\n            popupDesc: [],\n            mobileInvalidMsg: \"Mobile number is required.\",\n            emailInvalidMsg: \"Email is required.\",\n            visitTypes: []\n        }\n        this.handleVisitTypeSelect = this.handleVisitTypeSelect.bind(this);\n        this.handleNumVisitorsSelect = this.handleNumVisitorsSelect.bind(this);\n        this.handleVisitDateSelect = this.handleVisitDateSelect.bind(this);\n        this.handleVisitTimeSelect = this.handleVisitTimeSelect.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleMobileNoChange = this.handleMobileNoChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.setIsShown = this.setIsShown.bind(this);\n        this.setOnHide = this.setOnHide.bind(this);\n        this.setIsValidated = this.setIsValidated.bind(this);\n        this.setClearForm = this.setClearForm.bind(this);\n    }\n\n// #region functions\n    handleVisitTypeSelect = async (visitTypeValue) => {\n        const { visitTypes } = this.state;\n\n        this.setState({ visitType: visitTypeValue });\n\n        visitTypes.forEach(visitType => {\n            if (visitTypeValue === visitType.Code) {\n                this.setState({ visitTypeId: visitType._id });\n            }\n        });\n    }\n\n    handleNumVisitorsSelect(numVisitorsValue) {\n        this.setState({ numVisitors: numVisitorsValue });\n    }\n\n    handleVisitDateSelect(visitDateValue) {\n        const date = moment(visitDateValue).format('YYYY-MM-DD');\n        console.log(\"date : \" + date.toString())\n        this.setState({ visitDate: date });\n    }\n\n    handleVisitTimeSelect(visitTimeValue) {\n        console.log(\"time : \" + visitTimeValue.toString())\n        this.setState({ visitTime: visitTimeValue });\n    }\n\n    handleFirstNameChange(firstNameValue) {\n        this.setState({ firstName: firstNameValue.target.value });\n    }\n\n    handleLastNameChange(lastNameValue) {\n        this.setState({ lastName: lastNameValue.target.value });\n    }\n\n    handleMobileNoChange(mobileNoValue) {\n        this.setState({ mobileNo: mobileNoValue.target.value });\n    }\n\n    handleEmailChange(emailValue) {\n        this.setState({ email: emailValue.target.value });\n    }\n\n    setIsValidated() {\n        this.setState({ isValidated: true });\n    }\n\n    setMobileIsValid() {\n        this.setState({ isMobileInvalid: false, isMobileValid: true, mobileInvalidMsg: \"\" });\n    }\n\n    setEmailIsValid() {\n        this.setState({ isEmailInvalid: false, isEmailValid: true, emailInvalidMsg: \"\" });\n    }\n\n    setClearForm() {\n        this.setState({ isValidated: false });\n    }\n\n    setIsShown() {\n        this.setState({ isShown: true });\n    }\n\n    setOnHide(showModal) {\n        this.setState({ isShown: showModal });\n    }\n\n    handleSubmit = async (event) => {\n        const { visitTypeId, numVisitors, visitDate, visitTime, firstName, lastName, mobileNo, email } = this.state;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setIsValidated();\n        this.setState({ popupDesc: []});\n        var dateTime = moment(visitDate + ' ' + visitTime);\n\n        var validMobileNumber = Validator.ValidateMobileNumber(mobileNo);\n        var validEmail = Validator.ValidateEmail(email);\n        var errors = [];\n\n        if (visitTypeId && numVisitors && visitDate && visitTime && firstName && lastName && mobileNo && email) {\n\n            if (!validMobileNumber || !validEmail) {\n                if (!validMobileNumber) {\n                    console.log(\"invalidMobileNumber:\", validMobileNumber);\n                    this.setIsValidated();\n                    errors.push(\"Inputted mobile number must be a valid Australian mobile number.\");\n                    this.setState({\n                        mobileInvalidMsg: \"Inputted mobile number is invalid.\",\n                        isMobileInvalid: true,\n                        isMobileValid: false,\n                        isValidated: false,\n                    });\n                }\n                else {\n                    this.setMobileIsValid();\n                }\n                if (!validEmail) {\n                    console.log(\"invalidEmail:\", validEmail);\n                    this.setIsValidated();\n    \n                    errors.push(\"Inputted email is invalid.\");\n    \n                    this.setState({\n                        emailInvalidMsg: \"Inputted email is invalid.\",\n                        isEmailInvalid: true,\n                        isEmailValid: false,\n                        isValidated: false,\n                    });\n                }\n                else {\n                    this.setEmailIsValid();\n                }\n\n                this.setState({ popupTitle: ErrorTitle.ERR_BOOK_TITLE, popupDesc: errors });\n                console.log(\"popupDescArr: \", this.state.popupDesc);\n                this.setIsShown();\n            }\n            else {\n\n                const payload = {\n                    VisitTypeId: visitTypeId,\n                    NumberOfVisitors: numVisitors,\n                    FirstName: firstName,\n                    LastName: lastName,\n                    ContactNumber: validMobileNumber,\n                    Email: email,\n                    IsDeleted: false,\n                    VisitDateTime: dateTime,\n                    IsEditable: true,\n                    Status: \"Booked\"\n                }\n                console.log('Create Payload in BookVisit -> render -> payload', payload);\n\n                await api.createVisit(payload)\n                    .then(res => {\n                        errors.push(SuccessDescription.SUCC_BOOK_DESC);\n                        this.setState({\n                            visitType: '',\n                            visitTypeId: '',\n                            numVisitors: '',\n                            visitDate: moment().format('YYYY-MM-DD'),\n                            visitTime: '9:00',\n                            firstName: '',\n                            lastName: '',\n                            mobileNo: '',\n                            email: '',\n                            isMobileInvalid: false,\n                            isMobileValid: false,\n                            isEmailInvalid: false,\n                            isEmailValid: false,\n                            popupTitle: SuccessTitle.SUCC_BOOK_TITLE,\n                            popupDesc: errors\n                        }, this.setIsShown(), this.setClearForm());\n                    })\n                    .catch(err => {\n                        if (err.response.status === 400) {\n                            errors.push(ErrorDescription.ERR_BOOK_DESC)\n                            this.setState({\n                                popupDesc: errors,\n                                popupTitle: ErrorTitle.ERR_BOOK_TITLE\n                            }, this.setIsShown());\n\n                        }\n                    })\n            }\n        }\n        else {\n            errors.push(\"The form has not been completed.\")\n            this.setState({ \n                popupTitle: \"Missing form values\",\n                popupDesc: errors\n            });\n            this.setIsShown();\n        }\n    }\n\n    componentDidMount = async () => {\n        await api.getVisitTypes().then(visitTypes => {\n            this.setState({\n                visitTypes: visitTypes.data\n            })\n        });\n    }\n\n    populateVisitTypes(visitType, index) {\n        return (\n            <Dropdown.Item eventKey={visitType.Code}>{visitType.Name}</Dropdown.Item>\n        )\n    }\n\n    //#endregion\n\n    render() {\n        const { visitTypes, isShown, popupDesc, popupTitle } = this.state;\n        return (\n            <div>\n                {/* Component -- Create Appt */}\n                <div className=\"testBox\">\n                    <h2>Test - View state values</h2>\n                    <p>VisitType: {this.state?.visitType ? this.state.visitType : \"No value\"}</p>\n                    <p>VisitTypeId: {this.state?.visitTypeId ? this.state.visitTypeId : \"No value\"}</p>\n                    <p>NumOfVisitors: {this.state?.numVisitors ? this.state.numVisitors : \"No value\"}</p>\n                    <p>VisitDate: {this.state?.visitDate ? moment(this.state.visitDate).format('DD MMM YYYY HH:mm A') : \"No value\"}</p>\n                    <p>VisitTime: {this.state?.visitTime ? this.state.visitTime : \"No value\"}</p>\n                    <p>FirstName: {this.state?.firstName ? this.state.firstName : \"No value\"}</p>\n                    <p>LastName: {this.state?.lastName ? this.state.lastName : \"No value\"}</p>\n                    <p>MobileNo: {this.state?.mobileNo ? this.state.mobileNo : \"No value\"}</p>\n                    <p>Email: {this.state?.email ? this.state.email : \"No value\"}</p>\n                    <p>VisitTypes: {this.state?.visitTypes ? \"has Value\" : \"No value\"}</p>\n                    <p>isValidated (form): {this.state?.isValidated ? this.state.isValidated.toString() : \"false\"}</p>\n                    <p>IsShown (modal): {this.state?.isShown ? this.state.isShown.toString() : \"false\"}</p>\n                    <p>popupTitle (modal): {this.state?.popupTitle ? this.state.popupTitle : \"No value\"}</p>\n                    <p>popupDesc (modal): {this.state?.popupDesc ? \"Has value\" : \"No value\"}</p>\n                    <p>IsMobileInvalid (modal): {this.state?.isMobileInvalid ? this.state.isMobileInvalid.toString() : this.state.isMobileInvalid.toString()}</p>\n                    <p>IsMobileValid (modal): {this.state?.isMobileValid ? this.state.isMobileValid.toString() : this.state.isMobileInvalid.toString()}</p>\n                </div>\n                <div className=\"section  whiteBkg mt-4\">\n                    <Row>\n                        <span className=\"sectionHeader\">\n                            book a visit\n                        </span>\n                    </Row>\n\n                    {/* Component -- VisitForm */}\n                    <Row>\n                        <Col lg={6}>\n                            <div>\n                                <h2 className=\"mt-3\">visit details</h2>\n                                <Form id=\"MyForm\" noValidate validated={this.state.isValidated} onSubmit={this.handleSubmit}>\n                                    {/* <Form id=\"MyForm\" noValidate onSubmit={this.handleSubmit}> */}\n                                    <InputGroup className=\"mt-3\">\n                                        <DropdownButton\n                                            variant=\"outline-secondary\"\n                                            title=\"Visit type\"\n                                            id=\"visitTypeDropdown\"\n                                            onSelect={this.handleVisitTypeSelect}\n                                        >\n                                            {visitTypes.map(this.populateVisitTypes)}\n                                        </DropdownButton>\n                                        <Form.Control required name=\"VisitTypeValue\" aria-label=\"VisitTypeValue\" value={this.state.visitType} />\n                                        <Form.Control.Feedback type=\"invalid\">Visit type is required.</Form.Control.Feedback>\n                                    </InputGroup>\n\n                                    <InputGroup className=\"mt-3\">\n                                        <DropdownButton\n                                            variant=\"outline-secondary\"\n                                            title=\"Number of visitors\"\n                                            id=\"numVisitorsDropdown\"\n                                            onSelect={this.handleNumVisitorsSelect}\n                                        >\n                                            <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n                                        </DropdownButton>\n                                        <Form.Control required aria-label=\"NumberOfVisitorsValue\" value={this.state.numVisitors} />\n                                        <Form.Control.Feedback type=\"invalid\">Number of visitors is required.</Form.Control.Feedback>\n                                    </InputGroup>\n\n                                    <InputGroup className=\"mt-3\">\n                                        <MuiPickersUtilsProvider utils={MomentFnsUtils}>\n                                            <ThemeProvider theme={theme}>\n                                            <DatePicker\n                                                variant=\"inline\"\n                                                label=\"Visit Date\"\n                                                format=\"DD / MM / yyyy\"\n                                                value={this.state.visitDate}\n                                                onChange={this.handleVisitDateSelect}\n                                                disablePast\n                                                autoOk\n                                            />\n                                            </ThemeProvider>\n                                        </MuiPickersUtilsProvider>\n                                        <DropdownButton\n                                            variant=\"outline-secondary\"\n                                            title=\"Visit Time\"\n                                            id=\"visitTimeDropdown\"\n                                            onSelect={this.handleVisitTimeSelect}\n                                        >\n                                            <Dropdown.Item eventKey=\"9:00\">9:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"10:00\">10:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"11:00\">11:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"12:00\">12:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"13:00\">13:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"14:00\">14:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"15:00\">15:00</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"16:00\">16:00</Dropdown.Item>\n                                        </DropdownButton>\n                                        <Form.Control required aria-label=\"VisitTimeValue\" value={this.state.visitTime} />\n                                    </InputGroup>\n\n                                    <h2 className=\"mt-5\">contact details</h2>\n\n                                    <FloatingLabel controlId=\"floatingFirstName\" label=\"First Name\">\n                                        <Form.Control required type=\"text\" placeholder=\"firstName\" value={this.state.firstName} onChange={this.handleFirstNameChange} />\n                                        <Form.Control.Feedback type=\"invalid\">First name is required.</Form.Control.Feedback>\n                                    </FloatingLabel>\n                                    <FloatingLabel controlId=\"floatingLastName\" label=\"Last Name\" className=\"mt-3\">\n                                        <Form.Control required maxLength=\"13\" type=\"text\" placeholder=\"lastName\" value={this.state.lastName} onChange={this.handleLastNameChange} />\n                                        <Form.Control.Feedback type=\"invalid\">Last name is required.</Form.Control.Feedback>\n                                    </FloatingLabel>\n\n                                    <FloatingLabel controlId=\"floatingMobileNo\" label=\"Mobile no.\" className=\"mt-3\">\n                                        <Form.Control required type=\"text\" placeholder=\"mobileNo\" isValid={this.state.isMobileValid} isInvalid={this.state.isMobileInvalid} value={this.state.mobileNo} onChange={this.handleMobileNoChange} />\n                                        <Form.Control.Feedback type=\"invalid\">{this.state.mobileInvalidMsg}</Form.Control.Feedback>\n                                    </FloatingLabel>\n                                    <FloatingLabel controlId=\"floatingEmail\" label=\"Email\" className=\"mt-3\">\n                                        <Form.Control required type=\"email\" placeholder=\"email\" isValid={this.state.isEmailValid} isInvalid={this.state.isEmailInvalid} value={this.state.email} onChange={this.handleEmailChange} />\n                                        <Form.Control.Feedback type=\"invalid\">{this.state.emailInvalidMsg}</Form.Control.Feedback>\n                                    </FloatingLabel>\n\n                                    <h2 className=\"mt-5\">add-ons</h2>\n\n                                    <Button type=\"submit\" className=\"kcButton mt-3\">Submit</Button>\n                                    <Popup show={isShown} onHide={() => this.setOnHide(false)} popupTitle={popupTitle} popupDesc={popupDesc} />\n                                </Form>\n\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookVisit;","import '../styles/kitteacafe.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport OurVisits  from '../organisms/OurVisits';\nimport BookVisit from '../organisms/BookVisit';\n\nfunction KitteaCafe() {\n  return (\n    <div className=\"greyBkg\">\n\n      <Container fluid className=\"welcomeSection d-flex align-items-center\">\n        <Col lg={12}>\n          <span className=\"welcomeHeader\">kittea cafe</span>\n        </Col>\n      </Container>\n\n      <Container fluid>\n        <Row>\n          <Col lg={5}>\n            <OurVisits />\n          </Col>\n          <Col lg={7}>\n            <BookVisit/>\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default KitteaCafe;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KitteaCafe from './pages/KitteaCafe';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/kitteacafe.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KitteaCafe />\n\n    <script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n    <script\n      src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"\n      crossorigin></script>\n    <script\n      src=\"https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js\"\n      crossorigin></script>\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}